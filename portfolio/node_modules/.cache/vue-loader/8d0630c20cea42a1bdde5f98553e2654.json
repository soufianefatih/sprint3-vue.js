{"remainingRequest":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\src\\components\\Myproject.vue?vue&type=template&id=66120526&scoped=true&","dependencies":[{"path":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\src\\components\\Myproject.vue","mtime":1619519273283},{"path":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}