{"remainingRequest":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\src\\components\\Myproject.vue?vue&type=template&id=66120526&scoped=true&","dependencies":[{"path":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\src\\components\\Myproject.vue","mtime":1619490265634},{"path":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Youcode\\Desktop\\sprint3-vue.js\\portfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5fbSgwKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImJnLWxpZ2h0IiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIHRleHQgdGV4dC1jZW50ZXIgdGV4dC1hbGlnbi1jZW50ZXIgcC00ICIgfSwgWwogICAgICAgIF9jKCJoMSIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWRhcmsiIH0sIFtfdm0uX3YoIk1ZIFBST0pFQ1RTIildKSwKICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWRhcmsiIH0sIFtfdm0uX3YoIlRISVMgSVMgTVkgU1RPUlkiKV0pCiAgICAgIF0pLAogICAgICBfYygiYnIiKSwKICAgICAgX2MoImJyIiksCiAgICAgIF9jKCJiciIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciAiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyB0aW1lbGluZV9iYXIgIiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb2wtc20tNiBhIiwgYXR0cnM6IHsgImRhdGEtYW9zIjogImZhZGUtdXAiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGltZWxpbmVfY2FyZCIgfSwgWwogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkX2hlYWRlciIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmRfbnVtYmVyIiB9LCBbX3ZtLl92KCIwMSIpXSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZF90aXRsZSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF9jKCJoNiIsIFtfdm0uX3YoIjQgbW9udGggYWdvIildKSwKICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJiYWRnZSBiYWRnZS1kYW5nZXIgIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIlNvZnR3YXJlIikKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygiaDIiLCBbX3ZtLl92KCJMb3JlbSBpcHN1bSAiKV0pCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZF9ib2R5IiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRleHQtaW5mbyIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICJMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LiBNYXhpbWUgY29uc2VjdGV0dXIgaW1wZWRpdCBwb3NzaW11cyBub2JpcyB0ZW1wb3JpYnVzIGxhYm9ydW0gcG9ycm8gZW9zIG1hZ25hbSB1dCBvcHRpby4iCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImltZy1mbHVpZCIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvcHJvamVjdHMvaWcuZ2lmIikgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJMaW5rOiIpXSksCiAgICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBodHRwczovL2dpdGh1Yi5jb20iKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY29sLXNtLTYgbWItNSIsIGF0dHJzOiB7ICJkYXRhLWFvcyI6ICJmYWRlLXVwIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRpbWVsaW5lX2NhcmQiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZF9oZWFkZXIiIH0sIFsKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkX251bWJlciIgfSwgW192bS5fdigiMDIiKV0pLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmRfdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygiaDYiLCBbX3ZtLl92KCI0IG1vbnRoIGFnbyIpXSksCiAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAiYmFkZ2UgYmFkZ2UtcHJpbWFyeSAiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiTElCUkFSWSIpCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoImgyIiwgW192bS5fdigiTG9yZW0gaXBzdW0gIildKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmRfYm9keSIgfSwgWwogICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAiTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gTWF4aW1lIGNvbnNlY3RldHVyIGltcGVkaXQgcG9zc2ltdXMgbm9iaXMgdGVtcG9yaWJ1cyBsYWJvcnVtIHBvcnJvIGVvcyBtYWduYW0gdXQgb3B0aW8uIgogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbWctZmx1aWQiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL3Byb2plY3RzL2VkbGliLmpwZyIpIH0KICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiTGluazoiKV0pLAogICAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgaHR0cHM6Ly9naXRodWIuY29tIikKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNvbC1zbS02IiwgYXR0cnM6IHsgImRhdGEtYW9zIjogImZhZGUtdXAiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGltZWxpbmVfY2FyZCIgfSwgWwogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkX2hlYWRlciIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmRfbnVtYmVyIiB9LCBbX3ZtLl92KCIwMyIpXSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZF90aXRsZSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF9jKCJoNiIsIFtfdm0uX3YoIjQgbW9udGggYWdvIildKSwKICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJiYWRnZSBiYWRnZS1zdWNjZXNzICIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJWSURFTyBHQU1FIikKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygiaDIiLCBbX3ZtLl92KCJMb3JlbSBpcHN1bSAiKV0pCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZF9ib2R5IiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICJMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LiBNYXhpbWUgY29uc2VjdGV0dXIgaW1wZWRpdCBwb3NzaW11cyBub2JpcyB0ZW1wb3JpYnVzIGxhYm9ydW0gcG9ycm8gZW9zIG1hZ25hbSB1dCBvcHRpby4iCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImltZy1mbHVpZCIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvcHJvamVjdHMvZ3lyb2JhbGwuanBnIikgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJMaW5rOiIpXSksCiAgICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBodHRwczovL2dpdGh1Yi5jb20iKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY29sLXNtLTYgbWItNSIsIGF0dHJzOiB7ICJkYXRhLWFvcyI6ICJmYWRlLXVwIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRpbWVsaW5lX2NhcmQiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZF9oZWFkZXIiIH0sIFsKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkX251bWJlciIgfSwgW192bS5fdigiMDQiKV0pLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmRfdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygiaDYiLCBbX3ZtLl92KCI0IG1vbnRoIGFnbyIpXSksCiAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAiYmFkZ2UgYmFkZ2Utd2FybmluZyAiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigid2ViIHNpdGUiKQogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJoMiIsIFtfdm0uX3YoIkxvcmVtIGlwc3VtICIpXSkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkX2JvZHkiIH0sIFsKICAgICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgIkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0IGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIE1heGltZSBjb25zZWN0ZXR1ciBpbXBlZGl0IHBvc3NpbXVzIG5vYmlzIHRlbXBvcmlidXMgbGFib3J1bSBwb3JybyBlb3MgbWFnbmFtIHV0IG9wdGlvLiIKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaW1nLWZsdWlkIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9wcm9qZWN0cy9ib3Vyc293ZWIuanBnIikgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJMaW5rOiIpXSksCiAgICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBodHRwczovL2dpdGh1Yi5jb20iKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}